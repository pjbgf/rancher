// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rancher/rancher/pkg/controllers/provisioningv2/fleetcluster (interfaces: ClusterHostGetter)

// Package fleetcluster is a generated GoMock package.
package fleetcluster

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	clientcmd "k8s.io/client-go/tools/clientcmd"
)

// MockClusterHostGetter is a mock of ClusterHostGetter interface.
type MockClusterHostGetter struct {
	ctrl     *gomock.Controller
	recorder *MockClusterHostGetterMockRecorder
}

// MockClusterHostGetterMockRecorder is the mock recorder for MockClusterHostGetter.
type MockClusterHostGetterMockRecorder struct {
	mock *MockClusterHostGetter
}

// NewMockClusterHostGetter creates a new mock instance.
func NewMockClusterHostGetter(ctrl *gomock.Controller) *MockClusterHostGetter {
	mock := &MockClusterHostGetter{ctrl: ctrl}
	mock.recorder = &MockClusterHostGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClusterHostGetter) EXPECT() *MockClusterHostGetterMockRecorder {
	return m.recorder
}

// GetClusterHost mocks base method.
func (m *MockClusterHostGetter) GetClusterHost(arg0 clientcmd.ClientConfig) (string, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterHost", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetClusterHost indicates an expected call of GetClusterHost.
func (mr *MockClusterHostGetterMockRecorder) GetClusterHost(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterHost", reflect.TypeOf((*MockClusterHostGetter)(nil).GetClusterHost), arg0)
}
