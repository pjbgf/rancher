FROM quay.io/paulinhu/opt-test:linux5

ARG DAPPER_HOST_ARCH
ARG ARCH

ENV HELM_HOME /root/.helm
ENV DAPPER_ENV REPO TAG CI DRONE_BUILD_NUMBER DRONE_TAG DRONE_COMMIT DRONE_BRANCH DRONE_BUILD_EVENT SYSTEM_CHART_DEFAULT_BRANCH FOSSA_API_KEY GOGET_MODULE GOGET_VERSION RELEASE_ACTION RELEASE_TYPE POSTRELEASE_RANCHER_VERSION POSTRELEASE_RANCHER_STABLE DEBUG V2PROV_TEST_DIST V2PROV_TEST_RUN_REGEX
ENV DAPPER_SOURCE /go/src/github.com/rancher/rancher/
ENV DAPPER_OUTPUT ./bin ./dist ./go.mod ./go.sum ./pkg/apis/go.mod ./pkg/apis/go.sum ./pkg/client/go.mod ./pkg/client/go.sum ./scripts/package ./pkg/settings/setting.go ./package/Dockerfile ./Dockerfile.dapper
ENV DAPPER_DOCKER_SOCKET true
ARG CI
ARG DRONE_BUILD_NUMBER
ENV DAPPER_RUN_ARGS "-v rancher2-go16-pkg-1:/go/pkg -v rancher2-go16-cache-1:/root/.cache/go-build --privileged --network=host --label CI=${CI} --label DRONE_BUILD_NUMBER=${DRONE_BUILD_NUMBER}"
ENV GOCACHE /root/.cache/go-build
ENV HOME ${DAPPER_SOURCE}

# set up helm unittest - only needs to run on one arch. Needs to run after $HOME has been changed so we can find it later 
RUN if [ "${ARCH}" == "amd64" ]; then \
        helm_v3 plugin install https://github.com/helm-unittest/helm-unittest.git --version ${HELM_UNITTEST_VERSION}; \
    fi

VOLUME /var/lib/rancher
VOLUME /var/lib/kubelet
WORKDIR ${DAPPER_SOURCE}

# Cache go modules
COPY go.mod go.mod
COPY go.sum go.sum
COPY pkg/apis/go.mod pkg/apis/go.mod
COPY pkg/apis/go.sum pkg/apis/go.sum
COPY pkg/client/go.mod pkg/client/go.mod
COPY pkg/client/go.sum pkg/client/go.sum
RUN go mod download

ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
